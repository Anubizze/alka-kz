import emailjs from "@emailjs/browser";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
const publicKey = import.meta.env.VITE_EMAILJS_PUBLIC_KEY || "R76z8_rjN3YXj448h";
emailjs.init(publicKey);
console.log('üîß EmailJS: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∫–ª—é—á–æ–º:', publicKey ? '***' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');

export const sendEmail = async (name, phone, email, message) => {
  console.log('üì§ UseSendMail: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å—å–º–∞...')
  console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', { name, phone, email, message })
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ EmailJS –¥–æ—Å—Ç—É–ø–µ–Ω
  if (typeof emailjs === 'undefined') {
    console.error('‚ùå EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!')
    return { success: false, error: 'EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω' }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
  const envVars = {
    publicKey: import.meta.env.VITE_EMAILJS_PUBLIC_KEY || "R76z8_rjN3YXj448h",
    serviceId: import.meta.env.VITE_EMAILJS_SERVICE_ID || "service_unmqhcc",
    templateId: import.meta.env.VITE_EMAILJS_TEMPLATE_ID || "template_8g35gsf",
    recipientEmail: import.meta.env.VITE_RECIPIENT_EMAIL || "haval.semey@mail.ru",
    companyName: import.meta.env.VITE_COMPANY_NAME || "–ê–õ“ö–ê –õ–û–ú–ë–ê–†–î"
  };

  const missingVars = Object.entries(envVars)
    .filter(([key, value]) => !value)
    .map(([key]) => key);

  if (missingVars.length > 0) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingVars);
    return { 
      success: false, 
      error: `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${missingVars.join(', ')}` 
    };
  }
  
  try {
    const templateParams = {
      // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è EmailJS
      to_name: envVars.companyName,
      to_email: envVars.recipientEmail,
      from_name: name,
      from_phone: phone,
      from_email: email,
      message: message,
      reply_to: email,
      
      // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ–º—ã –ø–∏—Å—å–º–∞ (EmailJS –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç subject)
      subject: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${email}`,
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è EmailJS —à–∞–±–ª–æ–Ω–∞
      user_name: name,
      user_phone: phone,
      user_email: email,
      user_message: message,
      company_name: envVars.companyName,
      current_date: new Date().toLocaleDateString('ru-RU'),
      current_time: new Date().toLocaleTimeString('ru-RU'),
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      sender_name: name,
      sender_email: email,
      sender_phone: phone,
      sender_message: message
    };
    
    console.log('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —à–∞–±–ª–æ–Ω–∞:', templateParams)

    console.log('üîß EmailJS: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ...')
    console.log('üîß EmailJS: Service ID:', envVars.serviceId ? '***' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
    console.log('üîß EmailJS: Template ID:', envVars.templateId ? '***' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
    console.log('üîß EmailJS: Public Key:', envVars.publicKey ? '***' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
    
    const res = await emailjs.send(
      envVars.serviceId, // Service ID
      envVars.templateId, // Template ID
      templateParams,
      envVars.publicKey // Public Key
    );

    console.log("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", res.status, res.text);
    return { success: true, data: res };
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err);
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
    let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
    if (err.text) {
      errorMessage = err.text;
    } else if (err.message) {
      errorMessage = err.message;
    } else if (err.status) {
      errorMessage = `HTTP ${err.status}`;
    }
    
    console.error("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", {
      text: err.text,
      message: err.message,
      status: err.status,
      response: err.response
    });
    
    return { success: false, error: err, errorMessage };
  }
};
