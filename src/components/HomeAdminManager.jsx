
import React, { useState, useEffect } from 'react'
import Image from './Image'
import './HomeAdminManager.css'

const HomeAdminManager = () => {
  const [news, setNews] = useState([])
  const [editingNews, setEditingNews] = useState(null)
  const [showForm, setShowForm] = useState(false)
  const [formData, setFormData] = useState({
    title: '',
    image: '',
    alt: '',
    link: '',
    hyperlink: ''
  })
  const [imageUrl, setImageUrl] = useState('')
  const [imagePreview, setImagePreview] = useState('')
  const [imageError, setImageError] = useState(false)
  const [imageFileInputRef] = useState(React.createRef())
  const [selectedImageFile, setSelectedImageFile] = useState(null)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedNews = localStorage.getItem('homeCompanyNews')
    if (savedNews) {
      setNews(JSON.parse(savedNews))
    } else {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
      const defaultNews = [
        {
          id: 1,
          title: '–î–ê–ú–£ –õ–ò–ó–ò–ù–ì',
          image: '/DamuLeasing.jpeg',
          alt: '–î–ê–ú–£ –õ–ò–ó–ò–ù–ì',
          link: '/services/damu-leasing',
          hyperlink: ''
        },
        {
          id: 2,
          title: '–ù–£–†–õ–´ –ñ–ï–†',
          image: '/nurly-zher.jpg',
          alt: '–ù–£–†–õ–´ –ñ–ï–†',
          link: '/services/nurly-zher',
          hyperlink: ''
        },
        {
          id: 3,
          title: '–î–ê–ú–£',
          image: '/Damu.jpeg',
          alt: '–î–ê–ú–£',
          link: '/services/damu',
          hyperlink: ''
        }
      ]
      setNews(defaultNews)
      localStorage.setItem('homeCompanyNews', JSON.stringify(defaultNews))
    }
  }, [])

  const handleInputChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleImageUrlChange = (e) => {
    const url = e.target.value
    setImageUrl(url)
    setFormData(prev => ({ ...prev, image: url }))
    setImagePreview(url)
    setImageError(false)
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageFileSelect = (event) => {
    const file = event.target.files[0]
    if (file) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      if (!file.type.startsWith('image/')) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, PNG, GIF, WebP)')
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
      const maxSize = 5 * 1024 * 1024 // 5MB
      if (file.size > maxSize) {
        alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB')
        return
      }
      
      // –°–æ–∑–¥–∞–µ–º FileReader –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ base64
      const reader = new FileReader()
      
      reader.onload = (e) => {
        const base64String = e.target.result
        
        setSelectedImageFile({
          file: file,
          fileName: file.name,
          base64: base64String,
          previewUrl: base64String
        })
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º—É
        setFormData(prev => ({ ...prev, image: base64String }))
        
        setImagePreview(base64String)
        setImageError(false)
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        alert(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "${file.name}" —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!\n\nüìä –†–∞–∑–º–µ—Ä: ${(file.size / 1024).toFixed(1)} KB\nüñºÔ∏è –§–æ—Ä–º–∞—Ç: ${file.type}\n\nüíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–∏!`)
      }
      
      reader.onerror = () => {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.')
      }
      
      // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ base64
      reader.readAsDataURL(file)
    }
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const openImageFileDialog = () => {
    imageFileInputRef.current.click()
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ URL
  const handleAddImageUrl = () => {
    if (imageUrl.trim()) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π URL
      try {
        new URL(imageUrl)
        setFormData(prev => ({ ...prev, image: imageUrl }))
        setImagePreview(imageUrl)
        setImageError(false)
        setImageUrl('')
      } catch {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
      }
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const removeImage = () => {
    setFormData(prev => ({ ...prev, image: '' }))
    setImagePreview('')
    setImageError(false)
    setSelectedImageFile(null)
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:', { editingNews, formData }) // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    
    if (editingNews) {
      // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –Ω–æ–≤–æ—Å—Ç—å
      const updatedNews = news.map(item => 
        item.id === editingNews.id ? { ...formData, id: editingNews.id } : item
      )
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:', updatedNews) // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      setNews(updatedNews)
      localStorage.setItem('homeCompanyNews', JSON.stringify(updatedNews))
      setEditingNews(null)
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
      const newNews = {
        ...formData,
        id: Date.now()
      }
      const updatedNews = [...news, newNews]
      setNews(updatedNews)
      localStorage.setItem('homeCompanyNews', JSON.stringify(updatedNews))
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    setFormData({
      title: '',
      image: '',
      alt: '',
      link: '',
      hyperlink: ''
    })
    setImageUrl('')
    setImagePreview('')
    setShowForm(false)
  }

  const handleEdit = (newsItem) => {
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç—å:', newsItem) // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    setEditingNews(newsItem)
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    const editData = {
      title: newsItem.title || '',
      image: newsItem.image || '',
      alt: newsItem.alt || '',
      link: newsItem.link || '',
      hyperlink: newsItem.hyperlink || ''
    }
    
    setFormData(editData)
    setImageUrl(newsItem.image || '')
    setImagePreview(newsItem.image || '')
    setShowForm(true)
    
    console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', editData) // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  }

  const handleDelete = (id) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å?')) {
      const updatedNews = news.filter(item => item.id !== id)
      setNews(updatedNews)
      localStorage.setItem('homeCompanyNews', JSON.stringify(updatedNews))
    }
  }

  const handleCancel = () => {
    setShowForm(false)
    setEditingNews(null)
    setFormData({
      title: '',
      image: '',
      alt: '',
      link: '',
      hyperlink: ''
    })
    setImageUrl('')
    setImagePreview('')
    setSelectedImageFile(null)
    setImageError(false)
  }



  return (
    <div className="home-admin-manager">
      <div className="admin-header">
        <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏</h1>
        <button 
          className="add-news-btn"
          onClick={() => setShowForm(true)}
        >
          –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
        </button>
      </div>

      {showForm && (
        <div className="news-form-overlay">
          <div className="news-form">
            <h2>{editingNews ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å'}</h2>
            
            <form onSubmit={handleSubmit}>
              <div className="form-group">
                <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                <input
                  type="text"
                  name="title"
                  value={formData.title}
                  onChange={handleInputChange}
                  required
                />
              </div>



              <div className="form-group">
                <label>–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:</label>
                <input
                  type="text"
                  name="link"
                  value={formData.link}
                  onChange={handleInputChange}
                  placeholder="/services/..."
                  required
                />
              </div>

              <div className="form-group">
                <label>HTML-–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞:</label>
                <textarea
                  name="hyperlink"
                  value={formData.hyperlink || ''}
                  onChange={handleInputChange}
                  placeholder='<a href="https://example.com" target="_blank">–¢–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏</a> –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º'
                  rows="3"
                />
                <small className="form-help">–ú–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å HTML-–∫–æ–¥ —Å—Å—ã–ª–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: &lt;a href="https://www.google.com" target="_blank"&gt;–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ Google&lt;/a&gt;</small>
              </div>

              <div className="form-group">
                <label>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
                
                {/* –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                <div className="image-selection-buttons">
                  <button 
                    type="button"
                    className="select-image-file-btn"
                    onClick={openImageFileDialog}
                  >
                    üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                  </button>
                  <span className="image-separator">–∏–ª–∏</span>
                  <button 
                    type="button"
                    className="add-image-url-btn"
                    onClick={handleAddImageUrl}
                    disabled={!imageUrl.trim()}
                  >
                    üåê –î–æ–±–∞–≤–∏—Ç—å –ø–æ URL
                  </button>
                </div>
                
                {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ URL */}
                <div className="image-url-input">
                  <input
                    type="text"
                    value={imageUrl}
                    onChange={(e) => setImageUrl(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://example.com/image.jpg)"
                    onKeyPress={(e) => e.key === 'Enter' && handleAddImageUrl()}
                  />
                </div>
                
                {/* –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                <div className="image-path-display">
                  <input
                    type="text"
                    value={formData.image}
                    onChange={(e) => setFormData(prev => ({ ...prev, image: e.target.value }))}
                    placeholder="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ URL"
                    required
                    className="image-path-input"
                  />
                  <div className="image-path-hint">
                    üí° –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ (base64) –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ URL
                  </div>
                </div>
              </div>

              {imagePreview && (
                <div className="image-preview">
                  {imageError ? (
                    <div className="image-error">
                      <span>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
                      <div className="image-error-warning">
                        <p>‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!</p>
                        <p>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –ø–∞–ø–∫—É "public/" –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL</p>
                      </div>
                      <button 
                        type="button"
                        className="remove-image-btn"
                        onClick={removeImage}
                      >
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </div>
                  ) : (
                    <>
                      {selectedImageFile ? (
                        <div className="image-preview-uploaded">
                          <img 
                            src={selectedImageFile.previewUrl} 
                            alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" 
                            className="preview-image"
                          />
                          <div className="image-preview-info">
                            <div className="image-success">
                              <span className="success-icon">‚úÖ</span>
                              <span className="success-text">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</span>
                            </div>
                            <div className="image-file-info">
                              <span className="file-name">{selectedImageFile.fileName}</span>
                              <span className="file-size">({(selectedImageFile.file.size / 1024).toFixed(1)} KB)</span>
                            </div>
                            <button 
                              type="button"
                              className="remove-image-btn"
                              onClick={removeImage}
                            >
                              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                            </button>
                          </div>
                        </div>
                      ) : (
                        <>
                          <Image 
                            src={imagePreview} 
                            alt="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä" 
                            className="preview-image"
                            onError={() => setImageError(true)}
                            onLoad={() => setImageError(false)}
                          />
                          <div className="image-preview-info">
                            <span className="image-url">{formData.image}</span>
                            <button 
                              type="button"
                              className="remove-image-btn"
                              onClick={removeImage}
                            >
                              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                            </button>
                          </div>
                        </>
                      )}
                    </>
                  )}
                </div>
              )}

              <div className="form-group">
                <label>Alt —Ç–µ–∫—Å—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</label>
                <input
                  type="text"
                  name="alt"
                  value={formData.alt}
                  onChange={handleInputChange}
                  required
                />
              </div>



              {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
              <input
                ref={imageFileInputRef}
                type="file"
                accept="image/*"
                onChange={handleImageFileSelect}
                style={{ display: 'none' }}
              />

              <div className="form-actions">
                <button type="submit" className="save-btn">
                  {editingNews ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å'}
                </button>
                <button type="button" className="cancel-btn" onClick={handleCancel}>
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      <div className="news-list">
        {news.map(newsItem => (
          <div key={newsItem.id} className="news-item">
            <div className="news-image">
              {newsItem.image ? (
                newsItem.image.startsWith('data:') ? (
                  <img 
                    src={newsItem.image} 
                    alt={newsItem.alt}
                    className="news-image-img"
                  />
                ) : (
                  <Image 
                    src={newsItem.image} 
                    alt={newsItem.alt}
                    onError={(e) => {
                      e.target.style.display = 'none'
                      e.target.nextSibling.style.display = 'block'
                    }}
                  />
                )
              ) : (
                <div className="image-fallback">
                  <span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>
                </div>
              )}
              <div className="image-fallback" style={{ display: 'none' }}>
                <span>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>
              </div>
            </div>
            
            <div className="news-content">
              <h3>{newsItem.title}</h3>
              <div className="news-meta">
                {newsItem.hyperlink && (
                  <span className="news-hyperlink">HTML-—Å—Å—ã–ª–∫–∞: {newsItem.hyperlink}</span>
                )}
              </div>
            </div>
            
            <div className="news-actions">
              <button 
                className="edit-btn"
                onClick={() => handleEdit(newsItem)}
              >
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
              <button 
                className="delete-btn"
                onClick={() => handleDelete(newsItem.id)}
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}

export default HomeAdminManager
